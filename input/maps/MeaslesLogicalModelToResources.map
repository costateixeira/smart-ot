/// status = 'draft'
/// url = 'http://worldhealthorganization.github.io/smart-ot/StructureMap/MeaslesLogicalModelToResources'
/// name = 'MeaslesLogicalModelToResources'
/// id = 'MeaslesLogicalModelToResources'
/// title = 'Measles Logical Model To Resources'
/// description = 'Measles Logical Model To Resources'


uses "http://worldhealthorganization.github.io/smart-ot/StructureDefinition/SOTMeasles" alias MeaslesLogicalModel as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" alias MeaslesCIFBundle as target

group MeaslesLogicalModelToResources(source lm : MeaslesLogicalModel, target bundle : MeaslesCIFBundle) {
  lm -> bundle.type = 'document' "setbundletype";
  lm -> uuid() as id, bundle.id = id "setid";
  lm -> uuid() as cid then { 
    lm -> bundle.entry as entry,  entry.fullUrl = append('urn:uuid:', cid),  entry.request as request,  request.method = 'PUT',  request.url = append('Composition/', cid), create('http://worldhealthorganization.github.io/smart-ot/StructureDefinition/MeaslesCIFComposition') as composition then {
      lm then LmToComposition(lm, composition) "setupcomposition";
      lm -> entry.resource = composition "setcompositionresource";
      } "createcompositionresource2";
} "doit" ;
}

group LmToComposition(source lm : MeaslesLogicalModel, target composition : MeaslesCIFComposition) {
 // cid -> composition.id = cid "set_id";
  lm.Demographics as demographics -> uuid() as pid, create('http://worldhealthorganization.github.io/smart-ot/StructureDefinition/MeaslesPatient') as patient then { demographics then DemographicsToPatient(demographics, patient, pid) "set_patient";
  lm -> composition.subject= patient "setsubject";
  } "do this";
}

group DemographicsToPatient(source demographics:DemographicsLogicalModel , target patient: MeaslesPatient, source pid) {
 pid -> patient.id = pid "setid"3;
 demographics.name as name -> patient.name = name "setname3";
 demographics.DateOfBirth as dob -> patient.birthDate = dob "setdateofbirth3";
 demographics.Sex as sex -> patient.gender = sex "setsex3";
 demographics.CountryOfBirth as cob -> patient.CountryOfBirth = cob "setCountryOfBirth3";
 demographics.Landmark as landmark -> patient.extension as ext then {
  landmark -> ext.url = 'http://worldhealthorganization.github.io/smart-ot/StructureDefinition/Landmark' , ext.value = landmark "setlandmarkvalue3";
 } "setlandmark3";
 demographics.Guardian as guardian -> patient.extension as ext then {
  guardian -> ext.url = 'http://worldhealthorganization.github.io/smart-ot/StructureDefinition/Guardian' , ext.value = guardian "setguardianvalue3";
 } "set3guardian3";
 demographics.Telephone as phone -> patient.telecom = phone "settelephone";
 demographics.PlaceOfResidence as address -> patient.address = address "setaddress3";
 demographics.Occupation as occupation -> patient.extension as ext then {
  occupation -> ext.url ='http://worldhealthorganization.github.io/smart-ot/StructureDefinition/Occupation', ext.value = occupation "setoccupationvalue3";
 } "setoccupation";
 demographics.WorkAddress as workAddress -> patient.extension as ext then {
 workAddress -> ext.url = 'http://worldhealthorganization.github.io/smart-ot/StructureDefinition/WorkAddress', ext.value = workAddress "setworkaddressvalue3";
 } "setworkaddress3";
}